 int solvememoisation(int n, int x, int y, int z, vector<int> &dp) {
    if (n == 0) {
        return 0;
    }
    if (n < 0) {
        return INT_MIN;
    }
    if (dp[n] != -1) {
        return dp[n];
    }
    int ans =0;
    int opt1 = solvememoisation(n - x, x, y, z, dp);
    int opt2 = solvememoisation(n - y, x, y, z, dp);
    int opt3 = solvememoisation(n - z, x, y, z, dp);
    ans = 1 + max(opt1, max(opt2, opt3));
    dp[n] = ans;
    return ans;
}

int maximizeTheCuts(int n, int x, int y, int z) {
    vector<int> dp(n + 1, -1);
    int ans = solvememoisation(n, x, y, z, dp);
    return (ans < 0) ? 0 : ans; // If no cuts possible, return 0
}
