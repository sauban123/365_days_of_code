/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        //base case
        if(root == NULL)  return 0;
        queue<TreeNode*> q;
        int count =1;  // reminder 1 se start karenge not 0 se 
        q.push(root); // isme hum node insert->  isliye q<node> hai
        q.push(NULL);  // isse track rakh sahe next level ke liye
        while(!q.empty()){
            TreeNode* front = q.front();
            q.pop();
            if(front == NULL){
                cout<<endl;
                if(!q.empty()){
                    count++;
                    q.push(NULL);
                }
            }
            else {
                if(front->left !=NULL){
                    q.push(front->left);
                }
                if(front->right != NULL){
                    q.push(front->right);
                }
            }
        }
        return count;
    }
};
