#include<iostream> 
#include<stack>
using namespace std;

void insertSorted(stack<int>&st, int &ele){
    if(st.empty() || ele >st.top()){
        st.push(ele);
        return;
    }
    // 1 case sambhalna hai hume 
    int temp = st.top();
    st.pop();

    //recursion 
    insertSorted(st, ele);

    //backtracking 
    st.push(temp);

}

void sortStack(stack<int> &st){
    //base case 
    if(st.empty()){
        return;
    }

    //1 case hum solve karenge 
    int temp = st.top();
    st.pop();

    //recursion
    sortStack(st);

    //backtraching 
    insertSorted(st,temp);
}
int main(){
    stack<int> st;
    st.push(60);
    st.push(40);
    st.push(20);
    st.push(30);
    int ele =50;
    sortStack(st);
    insertSorted(st,ele);


    
   // insertSorted(st,ele);
    // print 
    while(!st.empty()){
        cout<<st.top()<<" ";
        st.pop();
    }
    return 0;
}
