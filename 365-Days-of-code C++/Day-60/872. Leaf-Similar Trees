/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void leafNodeCreate(TreeNode* root1 , vector<int> &leaf1){
        if(root1 == NULL){
            return;
        }

        if(root1->left == NULL && root1->right == NULL){
            leaf1.push_back(root1->val);
            return; // yahi par return lagana bhoolte hai sab
        }
        leafNodeCreate(root1->left , leaf1);
        leafNodeCreate(root1->right ,leaf1);

    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> leaf1;
        vector<int> leaf2;
        leafNodeCreate(root1 , leaf1);
        leafNodeCreate(root2 , leaf2);
        return leaf1 == leaf2; // galti 
                                 
    }
};
