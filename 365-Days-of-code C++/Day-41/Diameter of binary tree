/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   // ye height ka function chahe public ke andar likho 
   /// ya class solution ke upar koi fark ni padta hai
    int height(TreeNode* root){
        if(root == NULL){
            return 0;
        }
        int leftans = height(root->left);
        int rightans = height(root->right);
        int result = max(leftans,rightans) +1;
        return result;
    }
    int diameterOfBinaryTree(TreeNode* root) {
        if(root == NULL){
            return 0;
        }
        int option1 = diameterOfBinaryTree(root->left);
        int option2 = diameterOfBinaryTree(root->right);
        int option3 = height(root->left) + height(root->right);
        int ans = max(option1 , max(option2,option3));
        return ans;
        
    }
};
