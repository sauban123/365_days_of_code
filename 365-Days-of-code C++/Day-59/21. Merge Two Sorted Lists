/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1==NULL ){
            return list2;
        }
        if(list2 == NULL){
            return list1;
        }
        ListNode* ans = new ListNode(-1);
        ListNode * nptr = ans;
        while(list1 && list2){
            if(list1->val <= list2->val){
                nptr->next = list1;
                nptr = list1;
                list1 = list1->next;

            }
            else{
                nptr->next = list2;
                nptr = list2;
                list2 = list2->next;
            }
            // agr list1  ya lisr2 koi bach jaye tab 
            if(list1){
                nptr ->next = list1;
            }
            if(list2){
                nptr ->next = list2;
            }
        }
        return ans->next;
    }
};
