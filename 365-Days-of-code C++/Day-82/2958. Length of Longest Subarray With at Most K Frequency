class Solution {
public:
    int maxSubarrayLength(vector<int>& nums, int k) {
        unordered_map<int, int> mp;
        int n = nums.size();
        int l = 0;
        int ans = 0;
        for (int r = 0; r < n; r++) {
            mp[nums[r]]++;
            // if frequency exceeds ho tab sliding window shrink karo left se
            if (mp[nums[r]] > k) {

                while (nums[l] != nums[r]) {
                    mp[nums[l]]--;
                    l++;
                }
                mp[nums[l]]--;
                l++;
            }
            ans = max(ans, r - l + 1);
        }
        return ans;
    }
};
