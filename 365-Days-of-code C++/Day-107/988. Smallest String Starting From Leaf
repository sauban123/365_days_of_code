/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void solve(TreeNode* root, string currstr, string &ans){
        if(!root){
            return ;
        }
        currstr  = char(root->val + 'a') + currstr;// kyunki ulti string retur karani hai
        if(!root->left && !root->right){
            // check currstr is less than ans string
            // agar ans string NULL ho to currstr ko store karlo
            // ya agar currstr choti ho ans string se to update kardo
            if(ans == "" || ans > currstr){
                ans = currstr;
            }
        }
        solve(root->left , currstr, ans);
        solve(root->right , currstr, ans);
    }
    string smallestFromLeaf(TreeNode* root) {
        string currstr = "";
        string  ans = "";
        solve(root, currstr, ans);
        return ans;
    }
};
