/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
// yaha galti karte i ko pass by reference karan track rakhna hai i ka 
    TreeNode* build(int &i , int min , int max, vector<int> &preorder){
        if(i >= preorder.size()){
            return nullptr;
        }
        TreeNode* root = nullptr;
        if(preorder[i] <max && preorder[i] > min){
            root = new TreeNode(preorder[i++]);
            root->left = build(i , min , root->val , preorder);
            root->right = build( i , root->val , max , preorder);
        }
        return root;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        int max = INT_MAX; // yaha par galti karte hai sab min aur max val
        int min = INT_MIN;
        int i=0;
        return build(i , min , max, preorder);
    }
};
