class Solution {
public:
    int solveUsingRecursion(int start, int end,vector<vector<int>> &dp){
        if(start >= end){
            return 0;
        }
        
        if(dp[start][end] != -1){
            return dp[start][end];
        }
        int ans = INT_MAX;
        for(int i = start ; i<=end ;i++){
            ans = min(ans,i+ max(solveUsingRecursion(start, i-1,dp) , solveUsingRecursion(i+1 ,end,dp)));
        }
        dp[start][end] = ans;
        return dp[start][end];
    }

    int solveUsingTabulation(int n){
        vector<vector<int>> dp(n+2, vector<int> (n+1,0));
        // n+2 isliye kara kyinki hum n+1 wali index ko access kar rahe the 
        // thats's why n+2  vector create  kar liya 
        for(int start_index = n ; start_index>=1 ; start_index--){
            for(int end_index = 1; end_index<=n ; end_index++){

                if(start_index >=end_index){ 
                    // invalid range 
                    continue;
                }
                int ans = INT_MAX;
                for(int i = start_index ; i<=end_index ;i++){
                    ans = min(ans,i+ max(dp[start_index][i-1] , dp[i+1][end_index]));
                }
                dp[start_index][end_index] = ans;
            }
        }
        return dp[1][n];
    }
    int getMoneyAmount(int n) {
        int start =0;
        int end = n;
        vector<vector<int>> dp(n+1, vector<int> (n+1,-1));
        int ans = solveUsingTabulation(n);
        return ans ;
    }
};;
