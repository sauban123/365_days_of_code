#include<iostream>
#include<stack>
using namespace std;

bool checkRedundant(string &str){
    stack<char> st;
    for(int i=0 ;i<str.length();i++){
        char ch = str[i];
        if(ch == '(' || ch=='+' || ch=='-' || ch=='/' || ch=='*'){
            st.push(ch);
        }
        else if(ch==')'){
            int operatorcount =0;
            while(!st.empty() && st.top()!= '('){   // ise bhoolte hai 
                char temp = st.top();
                if(temp=='+' || temp=='-' || temp=='/' || temp=='*'){
                    operatorcount++;
                }
                st.pop();
            }
            // yaha par aap tabhi pahochenge jab 
            // jab stack ke top par ek opening bracket hoga 
            // opening bracket o bhi hatado
            st.pop();

            if(operatorcount ==0){
                return true;
            }
        }
    }
    // agar yaha tak pahoche hai
    // iska matlab hak ek bracket ke pair me
    // ek operator mila hoga 
    return false;
}
int main(){
    string str = "((a+b)*(c+d))";

    bool ans = checkRedundant(str);
    if(ans){
        cout<<"redundant bracket present"<<endl;
    }
    else {
        cout<<"redundant bracket not present"<<endl;
    }
    return 0;
}
